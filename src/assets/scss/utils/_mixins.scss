@use "maps" as *;

@mixin mainContent {
  margin: auto;
  max-width: var(--universal-width);
  overflow-x: hidden;
  display: flex;

  flex-direction: column;
}

@mixin faded($offset, $blur-radius, $spread-radius) {
  &.faded-left:after {
    box-shadow: inset $offset 0 $blur-radius (-$spread-radius);
  }

  &.faded-right:after {
    box-shadow: inset (-$offset) 0 $blur-radius (-$spread-radius);
  }

  &.faded-top:after {
    box-shadow: inset 0 $offset $blur-radius (-$spread-radius);
  }

  &.faded-bottom:after {
    box-shadow: inset 0 (-$offset) $blur-radius (-$spread-radius);
  }

  &.faded-left.faded-right:after {
    box-shadow: inset $offset 0 $blur-radius (-$spread-radius),
      inset (-$offset) 0 $blur-radius (-$spread-radius);
  }

  &.faded-left.faded-top:after {
    box-shadow: inset $offset ($offset) $blur-radius (-$spread-radius);
  }

  &.faded-right.faded-bottom:after {
    box-shadow: inset (-$offset) (-$offset) $blur-radius (-$spread-radius);
  }

  &.faded-top.faded-right:after {
    box-shadow: inset (-$offset) $offset $blur-radius (-$spread-radius);
  }

  &.faded-top.faded-bottom:after {
    box-shadow: inset 0 $offset $blur-radius (-$spread-radius),
      inset 0 (-$offset) $blur-radius (-$spread-radius);
  }

  &.faded-left.faded-bottom:after {
    box-shadow: inset $offset (-$offset) $blur-radius (-$spread-radius);
  }

  &.faded-top.faded-right.faded-bottom:after {
    box-shadow: inset (-$offset/2) 0 $blur-radius $spread-radius;
  }

  &.faded-left.faded-right.faded-bottom:after {
    box-shadow: inset 0 (-$offset/2) $blur-radius $spread-radius;
  }

  &.faded-left.faded-top.faded-bottom:after {
    box-shadow: inset ($offset/2) 0 $blur-radius $spread-radius;
  }

  &.faded-left.faded-top.faded-right:after {
    box-shadow: inset 0 ($offset/2) $blur-radius $spread-radius;
  }

  &.faded-all:after,
  &.faded-left.faded-top.faded-right.faded-bottom:after {
    box-shadow: inset 0 0 $blur-radius $spread-radius;
  }
}

@mixin imageCarouselContainer($includeImageWrapperStyles: true) {
  position: relative;
  .swiper {
    width: 800px;
    overflow-x: clip;
    overflow-y: visible;
    padding-left: 1rem;

    .swiper-slide {
      display: flex;
      justify-content: center;
      align-items: center;

      // Conditionally include .gatsby-image-wrapper styles
      @if $includeImageWrapperStyles {
        .gatsby-image-wrapper {
          border-radius: 1.5rem;
          box-shadow: var(--cool-shadow);
          height: 100%;
          aspect-ratio: 1/1;
        }
      }
    }
  }

  &:before,
  &:after {
    position: absolute;
    top: 0;
    pointer-events: none;
    width: 60px;
    height: 100%;
    content: "";
    z-index: 2;
  }

  &:before {
    left: 0;
    background: linear-gradient(to left, rgba(255, 255, 255, 0), white);
  }

  &:after {
    right: 0;
    background: linear-gradient(to right, rgba(255, 255, 255, 0), white);
  }
}

@mixin min-width-query($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  }
}

@mixin max-width-query($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (max-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  }
}
